{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","headers","post","App","useState","sort","setSort","filter","setFilter","loadedUsers","setLoadedUsers","users","setUsers","loading","setLoading","loadRandomUser","a","usersList","i","get","res","user","data","results","push","fullName","name","first","last","city","location","state","country","useEffect","Object","keys","map","key","toString","toLowerCase","includes","sortUsers","order","sortedUsers","b","onChangeSort","undefined","prevState","headerColor","color","className","href","style","onClick","type","onChange","ev","target","value","gender","email","phone","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.200634a3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport logo from './logo.svg';\nimport './App.css';\n\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\nfunction App() {\n  const [sort, setSort] = useState({});\n  const [filter, setFilter] = useState({});\n  const [loadedUsers, setLoadedUsers] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const loadRandomUser = async () => {\n    let usersList = [];\n    setLoading(true);\n    for (let i = 0; i < 20; i++) {\n      const res = await axios.get(\"https://randomuser.me/api/\");\n      const user = res.data.results[0];\n      usersList.push({\n        ...user,\n        fullName: `${user.name.first} ${user.name.last}`,\n        city: user.location.city,\n        state: user.location.state,\n        country: user.location.country,\n      });\n    }\n    setLoading(false);\n    setLoadedUsers(usersList);\n    setUsers(usersList);\n  };\n  useEffect(() => {\n    loadRandomUser();\n  }, []);\n  useEffect(() => {\n    let users = [...loadedUsers];\n    Object.keys(filter).map((key) => {\n      users = users.filter((user) =>\n        user[key].toString().toLowerCase().includes(filter[key].toLowerCase())\n      );\n    });\n    setSort({});\n    setUsers(users);\n  }, [filter]);\n  const sortUsers = (key, order) => {\n    const compare = (a, b) => {\n      if (a[key] > b[key]) {\n        if (order) {\n          return 1;\n        } else {\n          return -1;\n        }\n      }\n      if (a[key] < b[key]) {\n        if (order) {\n          return -1;\n        } else {\n          return 1;\n        }\n      }\n      return 0;\n    };\n    const sortedUsers = [...users];\n    sortedUsers.sort(compare);\n    setUsers(sortedUsers);\n  };\n  const onChangeSort = (key) => {\n    if (sort[key] == undefined) {\n      sortUsers(key, true);\n      setSort((prevState) => ({ ...prevState, [key]: true }));\n      return;\n    }\n    sortUsers(key, !sort[key]);\n    setSort((prevState) => ({ ...prevState, [key]: !sort[key] }));\n  };\n  const headerColor = (key) => ({\n    color: sort[key] !== undefined && (sort[key] ? \"#F00\" : \"#0F0\"),\n  });\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <h1> Users Table </h1>\n      <table>\n        <tr>\n          <th>\n            <a href=\"#\">Index</a>\n          </th>\n          <th>\n            <a\n              href=\"#\"\n              style={headerColor(\"fullName\")}\n              onClick={() => onChangeSort(\"fullName\")}\n            >\n              Name\n            </a>\n          </th>\n          <th>\n            <a\n              href=\"#\"\n              style={headerColor(\"gender\")}\n              onClick={() => onChangeSort(\"gender\")}\n            >\n              Gender\n            </a>\n          </th>\n          <th>\n            <a\n              href=\"#\"\n              style={headerColor(\"city\")}\n              onClick={() => onChangeSort(\"city\")}\n            >\n              City\n            </a>\n          </th>\n          <th>\n            <a\n              href=\"#\"\n              style={headerColor(\"state\")}\n              onClick={() => onChangeSort(\"state\")}\n            >\n              State\n            </a>\n          </th>\n          <th>\n            <a\n              href=\"#\"\n              style={headerColor(\"country\")}\n              onClick={() => onChangeSort(\"country\")}\n            >\n              Country\n            </a>\n          </th>\n          <th>\n            <a\n              href=\"#\"\n              style={headerColor(\"email\")}\n              onClick={() => onChangeSort(\"email\")}\n            >\n              Email\n            </a>\n          </th>\n          <th>\n            <a\n              href=\"#\"\n              style={headerColor(\"phone\")}\n              onClick={() => onChangeSort(\"phone\")}\n            >\n              Phone\n            </a>\n          </th>\n        </tr>\n        <tr>\n          <td></td>\n          <td>\n            <input\n              type=\"text\"\n              onChange={(ev) =>\n                setFilter((prevState) => ({\n                  ...prevState,\n                  fullName: ev.target.value,\n                }))\n              }\n            />\n          </td>\n          <td>\n            <input\n              type=\"text\"\n              onChange={(ev) =>\n                setFilter((prevState) => ({\n                  ...prevState,\n                  gender: ev.target.value,\n                }))\n              }\n            />\n          </td>\n          <td>\n            <input\n              type=\"text\"\n              onChange={(ev) =>\n                setFilter((prevState) => ({\n                  ...prevState,\n                  city: ev.target.value,\n                }))\n              }\n            />\n          </td>\n          <td>\n            <input\n              type=\"text\"\n              onChange={(ev) =>\n                setFilter((prevState) => ({\n                  ...prevState,\n                  state: ev.target.value,\n                }))\n              }\n            />\n          </td>\n          <td>\n            <input\n              type=\"text\"\n              onChange={(ev) =>\n                setFilter((prevState) => ({\n                  ...prevState,\n                  country: ev.target.value,\n                }))\n              }\n            />\n          </td>\n          <td>\n            <input\n              type=\"text\"\n              onChange={(ev) =>\n                setFilter((prevState) => ({\n                  ...prevState,\n                  email: ev.target.value,\n                }))\n              }\n            />\n          </td>\n          <td>\n            <input\n              type=\"text\"\n              onChange={(ev) =>\n                setFilter((prevState) => ({\n                  ...prevState,\n                  phone: ev.target.value,\n                }))\n              }\n            />\n          </td>\n        </tr>\n        {loading && \"Loading...\"}\n        {users.map((user, index) => (\n          <tr key={index}>\n            <td>{index + 1}</td>\n            <td>{user.fullName}</td>\n            <td>{user.gender}</td>\n            <td>{user.city}</td>\n            <td>{user.state}</td>\n            <td>{user.country}</td>\n            <td>{user.email}</td>\n            <td>{user.phone}</td>\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}